version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
  slack: circleci/slack@3.4.2
jobs:
  test:
    docker:
      - image: cirrusci/flutter:1.25.0-8.2.pre

    working_directory: ~/repo

    steps:
      - checkout
      - run: flutter pub get
      - run: flutter packages pub run build_runner build
      - run: mkdir reports
      - run: 
          name: Run Tests
          command: |
            set +e
            TEST_RESULT=`flutter test --coverage --machine > test_output.json`
            flutter pub run junitreport:tojunit --input test_output.json --output reports/test-results.xml
            exit $TEST_RESULT
      - codecov/upload:
          file: coverage/lcov.info
      - store_test_results:
          path: ./reports
      - persist_to_workspace:
          root: .
          paths:
            - ./lib/store/*/*.g.dart
            - ./lib/store/*.g.dart
      - slack/status:
          fail_only: true
          only_for_branches: master

  build-android:
    docker:
      - image: cirrusci/flutter:1.25.0-8.2.pre
    resource_class: medium

    working_directory: ~/repo

    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: flutter pub get
      - run: echo $ANDROID_KEYSTORE_B64 | base64 --decode > threedradio-upload.keystore
      - run: flutter build appbundle --release --build-number $(expr 1000 + << pipeline.number >> )
      - store_artifacts:
          path: ./build/app/outputs/bundle/release/app-release.aab
          destination: app-production
      - persist_to_workspace:
          root: .
          paths:
            - ./build/app/outputs/bundle/release/app-release.aab

  deploy-android:
    docker:
      - image: 'cimg/ruby:2.7.2-node'
    resource_class: small
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Fastlane Install
          command: |
            cd android
            echo $GOOGLE_PLAY_KEY_B64 | base64 --decode > deploy_key.json
            gem install bundler:2.1.4
            bundle install --path vender/bundle
      - run:
          name: 'Run Fastlane'
          command: |
            cd android
            bundle exec fastlane internal_deploy

workflows:
  version: 2.1
  test-build-deploy:
    jobs:
      - test
      - build-android:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy-android:
          requires:
            - build-android
          filters:
            branches:
              only:
                - master