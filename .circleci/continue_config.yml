version: 2.1
parameters:
  flutter-version:
    type: string
    default: "3.19.5"
  xcode-version:
    type: string
    default: "15.2"
  build-app:
    type: boolean
    default: false
  build-api:
    type: boolean
    default: false
orbs:
  codecov: codecov/codecov@1.0.2
  macos: circleci/macos@2
jobs:
  test:
    docker:
      - image: ghcr.io/cirruslabs/flutter:<< pipeline.parameters.flutter-version >>

    working_directory: ~/repo/app

    steps:
      - checkout:
          path: ~/repo
      - run: flutter pub get
      - run: flutter pub global activate junitreport
      - run: flutter pub run intl_utils:generate
      - run: dart run build_runner build
      - run: mkdir reports
      - run: 
          name: Run Tests
          command: |
            set +e
            flutter test --coverage --machine | tee test_output.json
            TEST_RESULT=${PIPESTATUS[0]}
            flutter pub global run junitreport:tojunit --input test_output.json --output reports/test-results.xml
            exit $TEST_RESULT
      - codecov/upload:
          file: coverage/lcov.info
      - store_test_results:
          path: ./reports

  build-android:
    docker:
      - image: ghcr.io/cirruslabs/flutter:<< pipeline.parameters.flutter-version >>
    resource_class: medium

    working_directory: ~/repo/app

    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: .
      - run: flutter pub get
      - run: flutter pub run intl_utils:generate
      - run: flutter packages pub run build_runner build
      - run: echo $ANDROID_KEYSTORE_B64 | base64 --decode > android/threedradio-upload.keystore
      - run: flutter build appbundle --release --build-number $(expr 1000 + << pipeline.number >> )
      - store_artifacts:
          path: ./build/app/outputs/bundle/release/app-release.aab
          destination: app-production
      - persist_to_workspace:
          root: .
          paths:
            - ./build/app/outputs/bundle/release/app-release.aab

  deploy-android:
    docker:
      - image: 'cimg/ruby:2.7.2-node'
    resource_class: small
    working_directory: ~/repo/app
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: .
      - run:
          name: Fastlane Install
          command: |
            cd android
            echo $GOOGLE_PLAY_KEY_B64 | base64 --decode > deploy_key.json
            gem install bundler:2.1.4
            bundle install --path vender/bundle
      - run:
          name: 'Run Fastlane'
          command: |
            cd android
            bundle exec fastlane internal_deploy


  build-ios:
    macos:
      xcode: << pipeline.parameters.xcode-version >>
    resource_class: macos.x86.medium.gen2

    working_directory: ~/repo/app
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: .
      - macos/switch-ruby:
          version: "3.1"
      - run:
          name: Install Flutter
          command: |
            curl https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_<< pipeline.parameters.flutter-version >>-stable.zip  --output flutter.zip
            unzip flutter.zip
            export PATH="$PATH:`pwd`/flutter/bin"
            flutter precache --ios --no-android 
            flutter doctor
      - run: echo $APPSTORE_API_KEY_B64 | base64 --decode > ios/appstore_api_key.json
      - restore_cache:
          keys:
            - gem-cache-v2-{{ arch }}-{{ .Branch }}-{{ checksum "./ios/Gemfile.lock" }}
            - gem-cache-v2-{{ arch }}-{{ .Branch }}
            - gem-cache-v1
      - restore_cache:
          keys:
            - pod-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "./ios/Podfile.lock" }}
            - pod-cache-v1-{{ arch }}-{{ .Branch }}
            - pod-cache-v1
      - run:
          name: Build Flutter App
          command: |
            export PATH="$PATH:`pwd`/flutter/bin"
            flutter pub get
            flutter pub run intl_utils:generate
            flutter pub run build_runner build
            flutter build ios --release --no-codesign --config-only  --build-number $(expr 1000 + << pipeline.number >> ) 
            cd ios
            chruby 2.7
            gem install bundler:2.1.4
            bundle install --path vendor/bundle
            bundle exec fastlane ios match_production
            bundle exec fastlane ios build_production
      - save_cache:
          key: gem-cache-v2-{{ arch }}-{{ .Branch }}-{{ checksum "./ios/Gemfile.lock" }}
          paths:
            - ./ios/vendor/bundle
      - save_cache:
          key: pod-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "./ios/Podfile.lock" }}
          paths:
            - ./ios/Pods
      - store_artifacts:
          path: ./ios/threedradio-player.ipa
          destination: app-production
      - persist_to_workspace:
          root: .
          paths:
            - ./ios/threedradio-player.ipa

  deploy-ios:
    macos:
      xcode: << pipeline.parameters.xcode-version >>
    resource_class: macos.x86.medium.gen2

    working_directory: ~/repo/app
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - gem-cache-v2-{{ arch }}-{{ .Branch }}-{{ checksum "./ios/Gemfile.lock" }}
            - gem-cache-v2-{{ arch }}-{{ .Branch }}
            - gem-cache-v1
      - run: echo $APPSTORE_API_KEY_B64 | base64 --decode > ios/appstore_api_key.json
      - run:
          name: TestFlight Deploy
          command: |
            cd ios
            chruby 2.7
            gem install bundler:2.1.4
            bundle install --path vendor/bundle
            bundle exec fastlane ios testflight_deploy

  api-test:
    docker:
      # specify the version you desire here
      - image: circleci/node:14

    working_directory: ~/repo/ondemand-api
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run Tests
          command: |
            npm test
workflows:
  version: 2.1
  build-app:
    when: << pipeline.parameters.build-app >>
    jobs:
      - test
      - build-android:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy-android:
          requires:
            - build-android
          filters:
            branches:
              only:
                - master
      - build-ios:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy-ios:
          requires:
            - build-ios
          filters:
            branches:
              only:
                - master
  build-api:
    when: << pipeline.parameters.build-api >>
    jobs:
      - api-test